type AcceptOrganizationInvitationMutation {
  errors: [ErrorType!]
  organization: OrganizationType
}

input AcceptOrganizationInvitationMutationInput {
  guid: String!
}

input AddressFilter {
  offset: Int
  first: Int
  label: String
  address: String
}

input AddressInput {
  country_code: CountryCodeEnum
  postal_code: String
  city: String
  federal_tax_id: String
  state_tax_id: String
  person_name: String
  company_name: String
  email: String
  phone_number: String
  state_code: String
  suburb: String
  residential: Boolean
  address_line1: String
  address_line2: String
}

type AddressTemplateType {
  object_type: String!
  id: String!
  label: String!
  address: AddressType!
  is_default: Boolean
}

type AddressTemplateTypeConnection {
  page_info: PageInfo!
  edges: [AddressTemplateTypeEdge!]!
}

type AddressTemplateTypeEdge {
  node: AddressTemplateType!
  cursor: String!
}

type AddressType {
  object_type: String!
  id: String
  postal_code: String
  city: String
  federal_tax_id: String
  state_tax_id: String
  person_name: String
  company_name: String
  country_code: CountryCodeEnum
  email: String
  phone_number: String
  state_code: String
  suburb: String
  residential: Boolean
  address_line1: String
  address_line2: String
  created_at: DateTime
  updated_at: DateTime
  created_by: UserType
  validate_location: Boolean
  validation: JSON
}

input AmazonMwsSettingsInput {
  metadata: JSON
  seller_id: String!
  developer_id: String!
  mws_auth_token: String!
  x_amz_access_token: String!
  aws_region: String!
  test_mode: Boolean!
  carrier_id: String!
}

type AmazonMwsSettingsType implements ConnectionType {
  id: String!
  active: Boolean!
  carrier_id: String!
  carrier_name: String!
  test_mode: Boolean!
  metadata: JSON
  seller_id: String!
  developer_id: String!
  mws_auth_token: String!
  x_amz_access_token: String!
  aws_region: String!
}

input AppFilter {
  offset: Int
  first: Int
  features: [String!]!
  metadata_key: String
  metadata_value: String
  created_after: DateTime
  created_before: DateTime
}

input AppInstallationFilter {
  offset: Int
  first: Int
  metadata_key: String
  metadata_value: String
  created_after: DateTime
  created_before: DateTime
}

type AppInstallationType {
  object_type: String!
  id: Int!
  access_scopes: [String!]!
  created_at: DateTime!
  updated_at: DateTime!
  created_by: UserType!
  metadata: JSON
}

type AppInstallationTypeConnection {
  page_info: PageInfo!
  edges: [AppInstallationTypeEdge!]!
}

type AppInstallationTypeEdge {
  node: AppInstallationType!
  cursor: String!
}

type AppType {
  object_type: String!
  id: String!
  display_name: String!
  developer_name: String!
  is_public: Boolean!
  is_builtin: Boolean!
  is_embedded: Boolean!
  is_published: Boolean!
  launch_url: String!
  features: [String!]!
  created_at: DateTime!
  updated_at: DateTime!
  created_by: UserType!
  metadata: JSON
  installation: AppInstallationType
}

type AppTypeConnection {
  page_info: PageInfo!
  edges: [AppTypeEdge!]!
}

type AppTypeEdge {
  node: AppType!
  cursor: String!
}

input AramexSettingsInput {
  account_country_code: String
  metadata: JSON
  username: String!
  password: String!
  account_pin: String!
  account_entity: String!
  account_number: String!
  test_mode: Boolean!
  carrier_id: String!
}

type AramexSettingsType implements ConnectionType {
  id: String!
  active: Boolean!
  carrier_id: String!
  carrier_name: String!
  test_mode: Boolean!
  metadata: JSON
  account_country_code: String!
  username: String!
  password: String!
  account_pin: String!
  account_entity: String!
  account_number: String!
}

input AuditLogEntryFilter {
  offset: Int
  first: Int
  object_pk: String
  action: [String!]!
}

type AuditLogEntryType {
  object_type: String!
  id: String!
  object_pk: String!
  object_id: Int!
  object_str: String!
  action: LogEntryAction!
}

type AuditLogEntryTypeConnection {
  page_info: PageInfo!
  edges: [AuditLogEntryTypeEdge!]!
}

type AuditLogEntryTypeEdge {
  node: AuditLogEntryType!
  cursor: String!
}

input AustraliaPostSettingsInput {
  metadata: JSON
  api_key: String!
  password: String!
  account_number: String!
  test_mode: Boolean!
  carrier_id: String!
}

type AustraliaPostSettingsType implements ConnectionType {
  id: String!
  active: Boolean!
  carrier_id: String!
  carrier_name: String!
  test_mode: Boolean!
  metadata: JSON
  api_key: String!
  password: String!
  account_number: String!
}

type BaseMutation {
  errors: [ErrorType!]
}

type BatchObjectType {
  id: Int!
  status: ResourceStatus
}

input BatchOperationFilter {
  offset: Int
  first: Int
  resource_type: [ResourceStatus!]!
  status: [BatchOperationStatus!]!
}

enum BatchOperationStatus {
  queued
  running
  completed
  failed
}

type BatchOperationType {
  object_type: String!
  id: Int!
  resource_type: ResourceStatus!
  resources: [BatchObjectType!]!
  status: BatchOperationStatus!
  test_mode: Boolean!
  created_at: DateTime!
  updated_at: DateTime!
  created_by: UserType!
}

type BatchOperationTypeConnection {
  page_info: PageInfo!
  edges: [BatchOperationTypeEdge!]!
}

type BatchOperationTypeEdge {
  node: BatchOperationType!
  cursor: String!
}

input CanadaPostSettingsInput {
  metadata: JSON
  username: String!
  password: String!
  customer_number: String!
  contract_id: String!
  test_mode: Boolean!
  carrier_id: String!
}

type CanadaPostSettingsType implements ConnectionType {
  id: String!
  active: Boolean!
  carrier_id: String!
  carrier_name: String!
  test_mode: Boolean!
  metadata: JSON
  username: String!
  password: String!
  customer_number: String!
  contract_id: String!
}

input CanparSettingsInput {
  metadata: JSON
  username: String!
  password: String!
  test_mode: Boolean!
  carrier_id: String!
}

type CanparSettingsType implements ConnectionType {
  id: String!
  active: Boolean!
  carrier_id: String!
  carrier_name: String!
  test_mode: Boolean!
  metadata: JSON
  username: String!
  password: String!
}

union CarrierConnectionType = AmazonMwsSettingsType | AramexSettingsType | AustraliaPostSettingsType | CanadaPostSettingsType | CanparSettingsType | ChronopostSettingsType | DHLExpressSettingsType | DHLPolandSettingsType | DHLUniversalSettingsType | DicomSettingsType | DPDHLSettingsType | EasyPostSettingsType | EShipperSettingsType | FedexSettingsType | FreightcomSettingsType | GenericSettingsType | PurolatorSettingsType | RoyalMailSettingsType | SendleSettingsType | SFExpressSettingsType | TNTSettingsType | UPSSettingsType | UPSFreightSettingsType | USPSSettingsType | USPSInternationalSettingsType | YanwenSettingsType | YunExpressSettingsType

type ChangeOrganizationOwnerMutation {
  errors: [ErrorType!]
  organization: OrganizationType
}

input ChangeOrganizationOwnerMutationInput {
  org_id: String!
  email: String!
  password: String!
}

type ChangePasswordMutation {
  errors: [ErrorType!]
  user: UserType
}

input ChangePasswordMutationInput {
  old_password: String!
  new_password1: String!
  new_password2: String!
}

type ChargeType {
  name: String
  amount: Float
  currency: CurrencyCodeEnum!
}

input ChronopostSettingsInput {
  account_country_code: String
  metadata: JSON
  account_number: String!
  password: String!
  test_mode: Boolean!
  carrier_id: String!
}

type ChronopostSettingsType implements ConnectionType {
  id: String!
  active: Boolean!
  carrier_id: String!
  carrier_name: String!
  test_mode: Boolean!
  metadata: JSON
  account_country_code: String!
  account_number: String!
  password: String!
}

input CommodityInput {
  weight: Float!
  weight_unit: WeightUnitEnum!
  sku: String
  quantity: Int = 1
  description: String
  value_amount: Float
  origin_country: CountryCodeEnum
  value_currency: CurrencyCodeEnum
  metadata: JSON
  parent_id: String
}

type CommodityType {
  object_type: String!
  id: String
  sku: String
  quantity: Int
  weight: Float
  description: String
  value_amount: Float
  weight_unit: WeightUnitEnum
  origin_country: CountryCodeEnum
  value_currency: CurrencyCodeEnum
  created_at: DateTime
  updated_at: DateTime
  created_by: UserType
  metadata: JSON
  parent_id: String
  parent: CommodityType
}

type ConfirmEmailChangeMutation {
  errors: [ErrorType!]
  user: UserType
}

input ConfirmEmailChangeMutationInput {
  token: String!
}

type ConfirmEmailMutation {
  errors: [ErrorType!]
  success: Boolean!
}

input ConfirmEmailMutationInput {
  token: String!
}

type ConfirmMultiFactorMutation {
  errors: [ErrorType!]
  user: UserType
}

input ConfirmMultiFactorMutationInput {
  token: String!
}

type ConfirmPasswordResetMutation {
  errors: [ErrorType!]
  user: UserType
}

input ConfirmPasswordResetMutationInput {
  uuid: String!
  token: String!
  new_password1: String!
  new_password2: String!
}

interface ConnectionType {
  id: String!
  active: Boolean!
  carrier_id: String!
  carrier_name: String!
  test_mode: Boolean!
}

enum CountryCodeEnum {
  AD
  AE
  AF
  AG
  AI
  AL
  AM
  AN
  AO
  AR
  AS
  AT
  AU
  AW
  AZ
  BA
  BB
  BD
  BE
  BF
  BG
  BH
  BI
  BJ
  BM
  BN
  BO
  BR
  BS
  BT
  BW
  BY
  BZ
  CA
  CD
  CF
  CG
  CH
  CI
  CK
  CL
  CM
  CN
  CO
  CR
  CU
  CV
  CY
  CZ
  DE
  DJ
  DK
  DM
  DO
  DZ
  EC
  EE
  EG
  ER
  ES
  ET
  FI
  FJ
  FK
  FM
  FO
  FR
  GA
  GB
  GD
  GE
  GF
  GG
  GH
  GI
  GL
  GM
  GN
  GP
  GQ
  GR
  GT
  GU
  GW
  GY
  HK
  HN
  HR
  HT
  HU
  IC
  ID
  IE
  IL
  IN
  IQ
  IR
  IS
  IT
  JE
  JM
  JO
  JP
  KE
  KG
  KH
  KI
  KM
  KN
  KP
  KR
  KV
  KW
  KY
  KZ
  LA
  LB
  LC
  LI
  LK
  LR
  LS
  LT
  LU
  LV
  LY
  MA
  MC
  MD
  ME
  MG
  MH
  MK
  ML
  MM
  MN
  MO
  MP
  MQ
  MR
  MS
  MT
  MU
  MV
  MW
  MX
  MY
  MZ
  NA
  NC
  NE
  NG
  NI
  NL
  NO
  NP
  NR
  NU
  NZ
  OM
  PA
  PE
  PF
  PG
  PH
  PK
  PL
  PR
  PT
  PW
  PY
  QA
  RE
  RO
  RS
  RU
  RW
  SA
  SB
  SC
  SD
  SE
  SG
  SH
  SI
  SK
  SL
  SM
  SN
  SO
  SR
  SS
  ST
  SV
  SY
  SZ
  TC
  TD
  TG
  TH
  TJ
  TL
  TN
  TO
  TR
  TT
  TV
  TW
  TZ
  UA
  UG
  US
  UY
  UZ
  VA
  VC
  VE
  VG
  VI
  VN
  VU
  WS
  XB
  XC
  XE
  XM
  XN
  XS
  XY
  YE
  YT
  ZA
  ZM
  ZW
}

input CreateAddressTemplateInput {
  label: String!
  address: AddressInput!
  is_default: Boolean
}

type CreateAddressTemplateMutation {
  errors: [ErrorType!]
  template: AddressTemplateType
}

type CreateAppMutation {
  errors: [ErrorType!]
  app: AppType
}

input CreateAppMutationInput {
  display_name: String!
  developer_name: String!
  features: [String!]!
  launch_url: String!
  is_embedded: Boolean!
  redirect_uris: String!
  is_public: Boolean = false
  metadata: JSON
}

type CreateCarrierConnectionMutation {
  errors: [ErrorType!]
  connection: CarrierConnectionType!
}

input CreateCarrierConnectionMutationInput {
  amazon_mws: AmazonMwsSettingsInput
  aramex: AramexSettingsInput
  australiapost: AustraliaPostSettingsInput
  canadapost: CanadaPostSettingsInput
  canpar: CanparSettingsInput
  chronopost: ChronopostSettingsInput
  dhl_express: DHLExpressSettingsInput
  dhl_poland: DHLPolandSettingsInput
  dhl_universal: DHLUniversalSettingsInput
  dicom: DicomSettingsInput
  dpdhl: DPDHLSettingsInput
  easypost: EasyPostSettingsInput
  eshipper: EShipperSettingsInput
  fedex: FedexSettingsInput
  freightcom: FreightcomSettingsInput
  generic: GenericSettingsInput
  purolator: PurolatorSettingsInput
  royalmail: RoyalMailSettingsInput
  sendle: SendleSettingsInput
  sf_express: SFExpressSettingsInput
  tnt: TNTSettingsInput
  ups: UPSSettingsInput
  ups_freight: UPSFreightSettingsInput
  usps: USPSSettingsInput
  usps_international: USPSInternationalSettingsInput
  yanwen: YanwenSettingsInput
  yunexpress: YunExpressSettingsInput
}

input CreateCustomsTemplateInput {
  label: String!
  customs: CustomsInput!
  is_default: Boolean
}

type CreateCustomsTemplateMutation {
  errors: [ErrorType!]
  template: CustomsTemplateType
}

type CreateDataTemplateMutation {
  errors: [ErrorType!]
  template: DataTemplateType
}

input CreateDataTemplateMutationInput {
  slug: String!
  name: String!
  fields_mapping: JSON!
  resource_type: ResourceStatus!
}

type CreateDocumentTemplateMutation {
  errors: [ErrorType!]
  template: DocumentTemplateType
}

input CreateDocumentTemplateMutationInput {
  slug: String!
  name: String!
  template: String!
  related_object: TemplateRelatedObject!
  active: Boolean = true
  description: String
}

input CreateLabelTemplateInput {
  slug: String!
  template: String!
  template_type: LabelTemplateTypeEnum!
  width: Int
  height: Int
  shipment_sample: JSON
}

type CreateOrderMutation {
  errors: [ErrorType!]
  order: OrderType
}

input CreateOrderMutationInput {
  order_date: Date!
  shipping_to: AddressInput!
  line_items: CommodityInput!
  shipping_from: AddressInput
  billing_address: AddressInput
  metadata: JSON
  options: JSON
  test_mode: Boolean
}

type CreateOrganizationMutation {
  errors: [ErrorType!]
  organization: OrganizationType
}

input CreateOrganizationMutationInput {
  name: String!
}

input CreateParcelTemplateInput {
  label: String!
  parcel: ParcelInput!
  is_default: Boolean
}

type CreateParcelTemplateMutation {
  errors: [ErrorType!]
  template: ParcelTemplateType
}

input CreateServiceLevelInput {
  service_name: String!
  service_code: String!
  cost: Float!
  currency: CurrencyCodeEnum!
  description: String
  active: Boolean
  estimated_transit_days: Int
  max_weight: Float
  max_width: Float
  max_height: Float
  max_length: Float
  weight_unit: WeightUnitEnum
  dimension_unit: DimensionUnitEnum
  domicile: Boolean
  international: Boolean
}

type CreateWebhookMutation {
  errors: [ErrorType!]
  webhook: WebhookType
}

input CreateWebhookMutationInput {
  url: String!
  enabled_events: [EventTypes!]!
  description: String
  disabled: Boolean = false
  test_mode: Boolean = false
}

enum CurrencyCodeEnum {
  EUR
  AED
  USD
  XCD
  AMD
  ANG
  AOA
  ARS
  AUD
  AWG
  AZN
  BAM
  BBD
  BDT
  XOF
  BGN
  BHD
  BIF
  BMD
  BND
  BOB
  BRL
  BSD
  BTN
  BWP
  BYN
  BZD
  CAD
  CDF
  XAF
  CHF
  NZD
  CLP
  CNY
  COP
  CRC
  CUC
  CVE
  CZK
  DJF
  DKK
  DOP
  DZD
  EGP
  ERN
  ETB
  FJD
  GBP
  GEL
  GHS
  GMD
  GNF
  GTQ
  GYD
  HKD
  HNL
  HRK
  HTG
  HUF
  IDR
  ILS
  INR
  IRR
  ISK
  JMD
  JOD
  JPY
  KES
  KGS
  KHR
  KMF
  KPW
  KRW
  KWD
  KYD
  KZT
  LAK
  LKR
  LRD
  LSL
  LYD
  MAD
  MDL
  MGA
  MKD
  MMK
  MNT
  MOP
  MRO
  MUR
  MVR
  MWK
  MXN
  MYR
  MZN
  NAD
  XPF
  NGN
  NIO
  NOK
  NPR
  OMR
  PEN
  PGK
  PHP
  PKR
  PLN
  PYG
  QAR
  RSD
  RUB
  RWF
  SAR
  SBD
  SCR
  SDG
  SEK
  SGD
  SHP
  SLL
  SOS
  SRD
  SSP
  STD
  SYP
  SZL
  THB
  TJS
  TND
  TOP
  TRY
  TTD
  TWD
  TZS
  UAH
  UYU
  UZS
  VEF
  VND
  VUV
  WST
  YER
  ZAR
}

enum CustomsContentTypeEnum {
  documents
  gift
  sample
  merchandise
  return_merchandise
  other
}

input CustomsInput {
  commodities: [CommodityInput!]!
  certify: Boolean
  commercial_invoice: Boolean
  content_type: CustomsContentTypeEnum
  content_description: String
  incoterm: IncotermCodeEnum
  invoice: String
  invoice_date: Date
  signer: String
  duty: DutyInput
  options: JSON
}

type CustomsTemplateType {
  object_type: String!
  id: String!
  label: String!
  customs: CustomsType!
  is_default: Boolean
}

type CustomsTemplateTypeConnection {
  page_info: PageInfo!
  edges: [CustomsTemplateTypeEdge!]!
}

type CustomsTemplateTypeEdge {
  node: CustomsTemplateType!
  cursor: String!
}

type CustomsType {
  object_type: String!
  id: String!
  certify: Boolean
  commercial_invoice: Boolean
  content_type: CustomsContentTypeEnum
  content_description: String
  incoterm: IncotermCodeEnum
  invoice: String
  invoice_date: Date
  signer: String
  created_at: DateTime
  updated_at: DateTime
  created_by: UserType
  options: JSON
  duty: DutyType
  commodities: [CommodityType!]!
}

input DHLExpressSettingsInput {
  account_country_code: String
  metadata: JSON
  site_id: String!
  password: String!
  account_number: String!
  test_mode: Boolean!
  carrier_id: String!
}

type DHLExpressSettingsType implements ConnectionType {
  id: String!
  active: Boolean!
  carrier_id: String!
  carrier_name: String!
  test_mode: Boolean!
  metadata: JSON
  account_country_code: String!
  site_id: String!
  password: String!
  account_number: String!
}

input DHLPolandSettingsInput {
  services: [CreateServiceLevelInput!]
  metadata: JSON
  username: String!
  password: String!
  account_number: String!
  test_mode: Boolean!
  carrier_id: String!
}

type DHLPolandSettingsType implements ConnectionType {
  id: String!
  active: Boolean!
  carrier_id: String!
  carrier_name: String!
  test_mode: Boolean!
  metadata: JSON
  services: [ServiceLevelType!]!
  username: String!
  password: String!
  account_number: String!
}

input DHLUniversalSettingsInput {
  metadata: JSON
  consumer_key: String!
  consumer_secret: String!
  test_mode: Boolean!
  carrier_id: String!
}

type DHLUniversalSettingsType implements ConnectionType {
  id: String!
  active: Boolean!
  carrier_id: String!
  carrier_name: String!
  test_mode: Boolean!
  metadata: JSON
  consumer_key: String!
  consumer_secret: String!
}

input DPDHLSettingsInput {
  services: [CreateServiceLevelInput!]
  metadata: JSON
  username: String!
  password: String!
  signature: String!
  app_id: String!
  account_number: String!
  test_mode: Boolean!
  carrier_id: String!
}

type DPDHLSettingsType implements ConnectionType {
  id: String!
  active: Boolean!
  carrier_id: String!
  carrier_name: String!
  test_mode: Boolean!
  metadata: JSON
  services: [ServiceLevelType!]!
  username: String!
  password: String!
  signature: String!
  app_id: String!
  account_number: String!
}

input DataTemplateFilter {
  offset: Int
  first: Int
  name: String
  slug: String
  resource_type: [ResourceStatus!]!
}

type DataTemplateType {
  object_type: String!
  id: String!
  name: String!
  slug: String!
  fields_mapping: JSON!
  description: String
  resource_type: ResourceStatus!
  created_at: DateTime
  updated_at: DateTime
  created_by: UserType
}

type DataTemplateTypeConnection {
  page_info: PageInfo!
  edges: [DataTemplateTypeEdge!]!
}

type DataTemplateTypeEdge {
  node: DataTemplateType!
  cursor: String!
}

"""Date (isoformat)"""
scalar Date

"""Date with time (isoformat)"""
scalar DateTime

type DefaultTemplatesType {
  default_address: AddressTemplateType
  default_customs: CustomsTemplateType
  default_parcel: ParcelTemplateType
}

type DeleteMutation {
  errors: [ErrorType!]
  id: String!
}

input DeleteMutationInput {
  id: String!
}

input DeleteOrganizationMutationInput {
  id: String!
  password: String!
}

input DicomSettingsInput {
  metadata: JSON
  username: String!
  password: String!
  billing_account: String!
  test_mode: Boolean!
  carrier_id: String!
}

type DicomSettingsType implements ConnectionType {
  id: String!
  active: Boolean!
  carrier_id: String!
  carrier_name: String!
  test_mode: Boolean!
  metadata: JSON
  username: String!
  password: String!
  billing_account: String!
}

enum DimensionUnitEnum {
  CM
  IN
}

type DisableMultiFactorMutation {
  errors: [ErrorType!]
  user: UserType
}

input DisableMultiFactorMutationInput {
  password: String!
}

input DocumentTemplateFilter {
  offset: Int
  first: Int
  name: String
  related_object: TemplateRelatedObject
}

type DocumentTemplateType {
  object_type: String!
  id: String!
  name: String!
  slug: String!
  template: String!
  active: Boolean!
  description: String
  related_object: TemplateRelatedObject
  created_at: DateTime
  updated_at: DateTime
  created_by: UserType
}

type DocumentTemplateTypeConnection {
  page_info: PageInfo!
  edges: [DocumentTemplateTypeEdge!]!
}

type DocumentTemplateTypeEdge {
  node: DocumentTemplateType!
  cursor: String!
}

input DutyInput {
  paid_by: PaidByEnum!
  currency: CountryCodeEnum
  account_number: String
  declared_value: Float
  bill_to: AddressInput
}

type DutyType {
  paid_by: PaidByEnum
  currency: CurrencyCodeEnum
  account_number: String
  declared_value: Float
  bill_to: AddressType
}

input EShipperSettingsInput {
  metadata: JSON
  username: String!
  password: String!
  test_mode: Boolean!
  carrier_id: String!
}

type EShipperSettingsType implements ConnectionType {
  id: String!
  active: Boolean!
  carrier_id: String!
  carrier_name: String!
  test_mode: Boolean!
  metadata: JSON
  username: String!
  password: String!
}

input EasyPostSettingsInput {
  metadata: JSON
  api_key: String!
  test_mode: Boolean!
  carrier_id: String!
}

type EasyPostSettingsType implements ConnectionType {
  id: String!
  active: Boolean!
  carrier_id: String!
  carrier_name: String!
  test_mode: Boolean!
  metadata: JSON
  api_key: String!
}

type EnableMultiFactorMutation {
  errors: [ErrorType!]
  user: UserType
}

input EnableMultiFactorMutationInput {
  password: String!
}

type ErrorType {
  field: String!
  messages: [String!]!
}

input EventFilter {
  offset: Int
  first: Int
  entity_id: String
  type: [EventTypes!]!
  date_after: DateTime
  date_before: DateTime
}

type EventType {
  object_type: String!
  id: String!
  test_mode: Boolean
  pending_webhooks: Int
  type: EventTypes
  created_at: DateTime
  updated_at: DateTime
  created_by: UserType
  data: JSON
}

type EventTypeConnection {
  page_info: PageInfo!
  edges: [EventTypeEdge!]!
}

type EventTypeEdge {
  node: EventType!
  cursor: String!
}

enum EventTypes {
  all
  shipment_purchased
  shipment_cancelled
  shipment_fulfilled
  tracker_created
  tracker_updated
  order_created
  order_updated
  order_fulfilled
  order_cancelled
  order_delivered
  batch_queued
  batch_failed
  batch_running
  batch_completed
}

input FedexSettingsInput {
  account_country_code: String
  metadata: JSON
  password: String!
  meter_number: String!
  account_number: String!
  user_key: String!
  test_mode: Boolean!
  carrier_id: String!
}

type FedexSettingsType implements ConnectionType {
  id: String!
  active: Boolean!
  carrier_id: String!
  carrier_name: String!
  test_mode: Boolean!
  metadata: JSON
  account_country_code: String!
  password: String!
  meter_number: String!
  account_number: String!
  user_key: String!
}

input FreightcomSettingsInput {
  metadata: JSON
  username: String!
  password: String!
  test_mode: Boolean!
  carrier_id: String!
}

type FreightcomSettingsType implements ConnectionType {
  id: String!
  active: Boolean!
  carrier_id: String!
  carrier_name: String!
  test_mode: Boolean!
  metadata: JSON
  username: String!
  password: String!
}

input GenericSettingsInput {
  account_country_code: String
  label_template: CreateLabelTemplateInput
  services: [CreateServiceLevelInput!]
  metadata: JSON
  display_name: String!
  custom_carrier_name: String!
  test_mode: Boolean!
  carrier_id: String!
  account_number: String!
}

type GenericSettingsType implements ConnectionType {
  id: String!
  active: Boolean!
  carrier_id: String!
  carrier_name: String!
  test_mode: Boolean!
  metadata: JSON
  account_country_code: String!
  label_template: LabelTemplateType
  services: [ServiceLevelType!]!
  display_name: String!
  custom_carrier_name: String!
  account_number: String!
}

enum IncotermCodeEnum {
  CFR
  CIF
  CIP
  CPT
  DAF
  DDP
  DDU
  DEQ
  DES
  EXW
  FAS
  FCA
  FOB
}

type InstallAppMutation {
  errors: [ErrorType!]
  installation: AppInstallationType
}

input InstallAppMutationInput {
  app_id: String!
  metadata: JSON
}

"""The `JSON` scalar type represents JSON values as specified by ECMA-404"""
scalar JSON

type LabelTemplateType {
  object_type: String!
  id: String
  slug: String
  template: String
  template_type: LabelTemplateTypeEnum
  width: Int
  height: Int
  shipment_sample: JSON
}

enum LabelTemplateTypeEnum {
  SVG
  ZPL
}

enum LabelTypeEnum {
  PDF
  ZPL
  PNG
}

type LineItemType {
  object_type: String!
  id: String
  sku: String
  quantity: Int
  weight: Float
  description: String
  value_amount: Float
  weight_unit: WeightUnitEnum
  origin_country: CountryCodeEnum
  value_currency: CurrencyCodeEnum
  created_at: DateTime
  updated_at: DateTime
  created_by: UserType
  parent_id: String
  metadata: JSON
  unfulfilled_quantity: Int
  parent: CommodityType
}

enum LogEntryAction {
  create
  update
  delete
}

input LogFilter {
  offset: Int
  first: Int
  api_endpoint: String
  date_after: DateTime
  date_before: DateTime
  entity_id: String
  method: [String!]
  status: String
  status_code: [Int!]
}

type LogType {
  object_type: String!
  id: Int!
  user: UserType
  requested_at: DateTime
  response_ms: Int
  path: String
  remote_addr: String
  host: String
  method: String
  status_code: Int
  data: JSON
  response: JSON
  query_params: JSON
}

type LogTypeConnection {
  page_info: PageInfo!
  edges: [LogTypeEdge!]!
}

type LogTypeEdge {
  node: LogType!
  cursor: String!
}

type MessageType {
  carrier_name: String
  carrier_id: String
  message: String
  code: String
  details: JSON
}

type MetadataMutation {
  errors: [ErrorType!]
  id: String!
  metadata: JSON!
}

input MetadataMutationInput {
  id: String!
  object_type: MetadataObjectType!
  added_values: JSON!
  delete_keys: [String!]
}

enum MetadataObjectType {
  carrier
  commodity
  shipment
  tracker
  order
  app
}

type Mutation {
  update_user(input: UpdateUserInput!): UserUpdateMutation!
  register_user(input: RegisterUserMutationInput!): RegisterUserMutation!
  mutate_token(input: TokenMutationInput!): TokenMutation!
  request_email_change(input: RequestEmailChangeMutationInput!): RequestEmailChangeMutation!
  confirm_email_change(input: ConfirmEmailChangeMutationInput!): ConfirmEmailChangeMutation!
  confirm_email(input: ConfirmEmailMutationInput!): ConfirmEmailMutation!
  change_password(input: ChangePasswordMutationInput!): ChangePasswordMutation!
  request_password_reset(input: RequestPasswordResetMutationInput!): RequestPasswordResetMutation!
  confirm_password_reset(input: ConfirmPasswordResetMutationInput!): ConfirmPasswordResetMutation!
  enable_multi_factor(input: EnableMultiFactorMutationInput!): EnableMultiFactorMutation!
  confirm_multi_factor(input: ConfirmMultiFactorMutationInput!): ConfirmMultiFactorMutation!
  disable_multi_factor(input: DisableMultiFactorMutationInput!): DisableMultiFactorMutation!
  create_address_template(input: CreateAddressTemplateInput!): CreateAddressTemplateMutation!
  update_address_template(input: UpdateAddressTemplateInput!): UpdateAddressTemplateMutation!
  create_customs_template(input: CreateCustomsTemplateInput!): CreateCustomsTemplateMutation!
  update_customs_template(input: UpdateCustomsTemplateInput!): UpdateCustomsTemplateMutation!
  create_parcel_template(input: CreateParcelTemplateInput!): CreateParcelTemplateMutation!
  update_parcel_template(input: UpdateParcelTemplateInput!): UpdateParcelTemplateMutation!
  create_carrier_connection(input: CreateCarrierConnectionMutationInput!): CreateCarrierConnectionMutation!
  update_carrier_connection(input: UpdateCarrierConnectionMutationInput!): UpdateCarrierConnectionMutation!
  mutate_system_connection(input: SystemCarrierMutationInput!): SystemCarrierMutation!
  delete_carrier_connection(input: DeleteMutationInput!): DeleteMutation!
  partial_shipment_update(input: PartialShipmentMutationInput!): PartialShipmentMutation!
  mutate_metadata(input: MetadataMutationInput!): MetadataMutation!
  delete_template(input: DeleteMutationInput!): DeleteMutation!
  discard_commodity(input: DeleteMutationInput!): DeleteMutation!
  discard_customs(input: DeleteMutationInput!): DeleteMutation!
  discard_parcel(input: DeleteMutationInput!): DeleteMutation!
  create_webhook(input: CreateWebhookMutationInput!): CreateWebhookMutation!
  update_webhook(input: UpdateWebhookMutationInput!): UpdateWebhookMutation!
  delete_webhook(input: DeleteMutationInput!): DeleteMutation!
  create_order(input: CreateOrderMutationInput!): CreateOrderMutation!
  partial_order_update(input: PartialOrderUpdateMutationInput!): PartialOrderUpdateMutation!
  create_data_template(input: CreateDataTemplateMutationInput!): CreateDataTemplateMutation!
  update_data_template(input: UpdateDataTemplateMutationInput!): UpdateDataTemplateMutation!
  delete_data_template(input: DeleteMutationInput!): DeleteMutation!
  create_organization(input: CreateOrganizationMutationInput!): CreateOrganizationMutation!
  update_organization(input: UpdateOrganizationMutationInput!): UpdateOrganizationMutation!
  delete_organization(input: DeleteOrganizationMutationInput!): BaseMutation!
  change_organization_owner(input: ChangeOrganizationOwnerMutationInput!): ChangeOrganizationOwnerMutation!
  set_organization_user_roles(input: SetOrganizationUserRolesMutationInput!): SetOrganizationUserRolesMutation!
  send_organization_invites(input: SendOrganizationInvitesMutationInput!): SendOrganizationInvitesMutation!
  accept_organization_invitation(input: AcceptOrganizationInvitationMutationInput!): AcceptOrganizationInvitationMutation!
  delete_organization_invitation(input: DeleteMutationInput!): DeleteMutation!
  create_document_template(input: CreateDocumentTemplateMutationInput!): CreateDocumentTemplateMutation!
  update_document_template(input: UpdateDocumentTemplateMutationInput!): UpdateDocumentTemplateMutation!
  delete_document_template(input: DeleteMutationInput!): DeleteMutation!
  create_app(input: CreateAppMutationInput!): CreateAppMutation!
  update_app(input: UpdateAppMutationInput!): UpdateAppMutation!
  delete_app(input: DeleteMutationInput!): DeleteMutation!
  install_app(input: InstallAppMutationInput!): InstallAppMutation!
  uninstall_app(input: UninstallAppMutationInput!): UninstallAppMutation!
}

input OrderFilter {
  offset: Int
  first: Int
  id: [String!]!
  source: [String!]!
  order_id: [String!]!
  ontion_key: [String!]!
  address: String
  ontion_value: [String!]!
  metadata_key: [String!]!
  metadata_value: [String!]!
  status: [OrderStatus!]!
}

enum OrderStatus {
  unfulfilled
  cancelled
  fulfilled
  delivered
  partial
}

type OrderType {
  object_type: String!
  id: String!
  shipping_to: AddressType!
  shipping_from: AddressType
  billing_address: AddressType
  shipments: [ShipmentType!]!
  metadata: JSON!
  options: JSON!
  status: OrderStatus!
  created_at: DateTime
  updated_at: DateTime
  created_by: UserType
  line_items: [LineItemType!]!
}

type OrderTypeConnection {
  page_info: PageInfo!
  edges: [OrderTypeEdge!]!
}

type OrderTypeEdge {
  node: OrderType!
  cursor: String!
}

type OrganizationInvitationType {
  object_type: String!
  id: String!
  guid: String!
  invitee_identifier: String!
  created: DateTime!
  modified: DateTime!
  invited_by: UserType!
  invitee: UserType
  organization_name: String!
}

type OrganizationMemberType {
  email: String!
  is_admin: Boolean!
  roles: [UserRole!]!
  is_owner: Boolean
  full_name: String
  last_login: DateTime
  invitation: OrganizationInvitationType
}

type OrganizationType {
  id: String!
  name: String!
  slug: String!
  is_active: Boolean!
  created: DateTime!
  modified: DateTime!
  organization_invites: [OrganizationInvitationType!]!
  current_user: OrganizationMemberType!
  members: [OrganizationMemberType!]!
  token: String!
}

type PageInfo {
  has_next_page: Boolean!
  has_previous_page: Boolean!
  start_cursor: String
  end_cursor: String
}

enum PaidByEnum {
  sender
  recipient
  third_party
}

input ParcelInput {
  weight: Float!
  weight_unit: WeightUnitEnum!
  width: Float
  height: Float
  length: Float
  packaging_type: String
  package_preset: String
  description: String
  content: String
  is_document: Boolean
  dimension_unit: DimensionUnitEnum
  reference_number: String
  items: [CommodityInput!]
}

type ParcelTemplateType {
  object_type: String!
  id: String!
  label: String!
  parcel: ParcelType!
  is_default: Boolean
}

type ParcelTemplateTypeConnection {
  page_info: PageInfo!
  edges: [ParcelTemplateTypeEdge!]!
}

type ParcelTemplateTypeEdge {
  node: ParcelTemplateType!
  cursor: String!
}

type ParcelType {
  object_type: String!
  id: String
  weight: Float
  width: Float
  height: Float
  length: Float
  packaging_type: String
  package_preset: String
  description: String
  content: String
  is_document: Boolean
  weight_unit: WeightUnitEnum
  dimension_unit: DimensionUnitEnum
  reference_number: String
  created_at: DateTime
  updated_at: DateTime
  created_by: UserType
  items: [CommodityType!]
}

type PartialOrderUpdateMutation {
  errors: [ErrorType!]
  order: OrderType
}

input PartialOrderUpdateMutationInput {
  id: String!
  order_date: Date!
  shipping_to: AddressInput!
  line_items: CommodityInput!
  shipping_from: AddressInput
  billing_address: AddressInput
  metadata: JSON
  options: JSON
  test_mode: Boolean
}

type PartialShipmentMutation {
  errors: [ErrorType!]
  shipment: ShipmentType
}

input PartialShipmentMutationInput {
  id: String!
  recipient: AddressInput
  shipper: AddressInput
  customs: CustomsInput
  parcels: [ParcelInput!]
  payment: PaymentInput
  options: JSON
  metadata: JSON
  reference: String
}

input PaymentInput {
  account_number: String
  paid_by: PaidByEnum
  currency: CurrencyCodeEnum
}

type PaymentType {
  id: String
  account_number: String
  paid_by: PaidByEnum
  currency: CurrencyCodeEnum
}

type PrivateAppType {
  object_type: String!
  id: String!
  display_name: String!
  developer_name: String!
  is_public: Boolean!
  is_builtin: Boolean!
  is_embedded: Boolean!
  is_published: Boolean!
  launch_url: String!
  features: [String!]!
  client_id: String!
  redirect_uris: String!
  created_at: DateTime!
  updated_at: DateTime!
  created_by: UserType!
  metadata: JSON
  installation: AppInstallationType
}

type PrivateAppTypeConnection {
  page_info: PageInfo!
  edges: [PrivateAppTypeEdge!]!
}

type PrivateAppTypeEdge {
  node: PrivateAppType!
  cursor: String!
}

input PurolatorSettingsInput {
  metadata: JSON
  username: String!
  password: String!
  account_number: String!
  user_token: String!
  test_mode: Boolean!
  carrier_id: String!
}

type PurolatorSettingsType implements ConnectionType {
  id: String!
  active: Boolean!
  carrier_id: String!
  carrier_name: String!
  test_mode: Boolean!
  metadata: JSON
  username: String!
  password: String!
  account_number: String!
  user_token: String!
}

type Query {
  user: UserType
  token(org_id: String): TokenType!
  user_connections: [CarrierConnectionType!]!
  system_connections(test_mode: Boolean): [SystemConnectionType!]!
  default_templates: DefaultTemplatesType!
  address_templates(filter: AddressFilter): AddressTemplateTypeConnection!
  customs_templates(filter: TemplateFilter): CustomsTemplateTypeConnection!
  parcel_templates(filter: TemplateFilter): ParcelTemplateTypeConnection!
  log(id: Int!): LogType
  logs(filter: LogFilter): LogTypeConnection!
  tracingrecord(id: String!): TracingRecordType
  tracingrecords(filter: TracingRecordFilter): TracingRecordTypeConnection!
  shipment(id: String!): ShipmentType
  shipments(filter: ShipmentFilter): ShipmentTypeConnection!
  tracker(id: String!): TrackerType
  trackers(filter: TrackerFilter): TrackerTypeConnection!
  webhook(id: String!): WebhookType
  webhooks(filter: WebhookFilter): WebhookTypeConnection!
  event(id: String!): EventType
  events(filter: EventFilter): EventTypeConnection!
  order(id: String!): OrderType
  orders(filter: OrderFilter): OrderTypeConnection!
  data_template(id: String!): DataTemplateType
  data_templates(filter: DataTemplateFilter): DataTemplateTypeConnection!
  batch_operation(id: String!): BatchOperationType
  batch_operations(filter: BatchOperationFilter): BatchOperationTypeConnection!
  auditlog(id: String!): AuditLogEntryType
  auditlogs(filter: AuditLogEntryFilter): AuditLogEntryTypeConnection!
  organization(id: String!): OrganizationType
  organizations: [OrganizationType!]!
  organization_invitation(id: String, guid: String): OrganizationType
  document_template(id: String!): DocumentTemplateType
  document_templates(filter: DocumentTemplateFilter): DocumentTemplateTypeConnection!
  app(id: String!): AppType
  apps(filter: AppFilter): AppTypeConnection!
  private_app(id: String!): PrivateAppType
  private_apps(filter: AppFilter): PrivateAppTypeConnection!
  installations(filter: AppInstallationFilter): AppInstallationTypeConnection!
}

type RateType {
  id: String
  carrier_name: String
  carrier_id: String
  currency: CurrencyCodeEnum!
  transit_days: Int
  service: String
  total_charge: Float
  extra_charges: [ChargeType!]!
  test_mode: Boolean
  meta: JSON
}

type RegisterUserMutation {
  errors: [ErrorType!]
  user: UserType
}

input RegisterUserMutationInput {
  email: String!
  password1: String!
  password2: String!
  redirect_url: String!
  full_name: String
}

type RequestEmailChangeMutation {
  errors: [ErrorType!]
  user: UserType
}

input RequestEmailChangeMutationInput {
  email: String!
  password: String!
  redirect_url: String!
}

type RequestPasswordResetMutation {
  errors: [ErrorType!]
  email: String!
  redirect_url: String!
}

input RequestPasswordResetMutationInput {
  email: String!
  redirect_url: String!
}

enum ResourceStatus {
  queued
  created
  failed
  processed
}

input RoyalMailSettingsInput {
  metadata: JSON
  client_id: String!
  client_secret: String!
  test_mode: Boolean!
  carrier_id: String!
}

type RoyalMailSettingsType implements ConnectionType {
  id: String!
  active: Boolean!
  carrier_id: String!
  carrier_name: String!
  test_mode: Boolean!
  metadata: JSON
  client_id: String!
  client_secret: String!
}

input SFExpressSettingsInput {
  metadata: JSON
  partner_id: String!
  check_word: String!
  test_mode: Boolean!
  carrier_id: String!
}

type SFExpressSettingsType implements ConnectionType {
  id: String!
  active: Boolean!
  carrier_id: String!
  carrier_name: String!
  test_mode: Boolean!
  metadata: JSON
  partner_id: String!
  check_word: String!
}

type SendOrganizationInvitesMutation {
  errors: [ErrorType!]
  organization: OrganizationType
}

input SendOrganizationInvitesMutationInput {
  org_id: String!
  emails: String!
  redirect_url: String!
}

input SendleSettingsInput {
  metadata: JSON
  sendle_id: String!
  api_key: String!
  test_mode: Boolean!
  carrier_id: String!
}

type SendleSettingsType implements ConnectionType {
  id: String!
  active: Boolean!
  carrier_id: String!
  carrier_name: String!
  test_mode: Boolean!
  metadata: JSON
  sendle_id: String!
  api_key: String!
}

type ServiceLevelType {
  object_type: String!
  id: String
  service_name: String
  service_code: String
  description: String
  active: Boolean
  cost: Float
  currency: CurrencyCodeEnum
  estimated_transit_days: Int
  max_weight: Float
  max_width: Float
  max_height: Float
  max_length: Float
  weight_unit: WeightUnitEnum
  dimension_unit: DimensionUnitEnum
  domicile: Boolean
  international: Boolean
}

type SetOrganizationUserRolesMutation {
  errors: [ErrorType!]
  organization: OrganizationType
}

input SetOrganizationUserRolesMutationInput {
  org_id: String!
  user_id: String!
  roles: [UserRole!]!
}

input ShipmentFilter {
  offset: Int
  first: Int
  address: String
  created_after: DateTime
  created_before: DateTime
  carrier_name: [String!]
  reference: String
  service: [String!]
  status: [String!]
  option_key: [String!]
  option_value: String
  metadata_key: [String!]
  metadata_value: String
  test_mode: Boolean
}

enum ShipmentStatusEnum {
  draft
  purchased
  cancelled
  shipped
  in_transit
  delivered
}

type ShipmentType {
  object_type: String!
  id: String
  status: ShipmentStatusEnum
  recipient: AddressType
  shipper: AddressType
  label_type: LabelTypeEnum
  tracking_number: String
  shipment_identifier: String
  tracking_url: String
  test_mode: Boolean
  reference: String
  customs: CustomsType
  selected_rate: RateType
  payment: PaymentType
  options: JSON
  services: [String!]
  messages: [MessageType!]
  meta: JSON
  metadata: JSON
  rates: [RateType!]
  parcels: [ParcelType!]
  service: String
  carrier_ids: [String!]
  selected_rate_id: String
  tracker_id: String
  label_url: String
  invoice_url: String
  tracker: TrackerType
  created_at: DateTime
  updated_at: DateTime
  created_by: UserType
  carrier_id: [String!]!
  carrier_name: [String!]!
}

type ShipmentTypeConnection {
  page_info: PageInfo!
  edges: [ShipmentTypeEdge!]!
}

type ShipmentTypeEdge {
  node: ShipmentType!
  cursor: String!
}

type SystemCarrierMutation {
  errors: [ErrorType!]
  carrier: SystemConnectionType
}

input SystemCarrierMutationInput {
  id: String!
  enable: Boolean!
}

type SystemConnectionType {
  id: String!
  carrier_id: String!
  test_mode: Boolean!
  active: Boolean!
  capabilities: [String!]!
  created_at: DateTime
  updated_at: DateTime
  carrier_name: String
  enabled: Boolean
}

input TNTSettingsInput {
  account_country_code: String
  metadata: JSON
  username: String!
  password: String!
  account_number: String!
  test_mode: Boolean!
  carrier_id: String!
}

type TNTSettingsType implements ConnectionType {
  id: String!
  active: Boolean!
  carrier_id: String!
  carrier_name: String!
  test_mode: Boolean!
  metadata: JSON
  account_country_code: String!
  username: String!
  password: String!
  account_number: String!
}

input TemplateFilter {
  offset: Int
  first: Int
  label: String
}

enum TemplateRelatedObject {
  shipment
  order
}

type TokenMutation {
  errors: [ErrorType!]
  token: TokenType
}

input TokenMutationInput {
  password: String
  refresh: Boolean
}

type TokenType {
  object_type: String!
  key: String!
  created: DateTime!
}

input TracingRecordFilter {
  offset: Int
  first: Int
  key: String
  request_log_id: String
  date_after: DateTime
  date_before: DateTime
}

type TracingRecordType {
  object_type: String!
  id: String
  key: String
  timestamp: Float
  test_mode: Boolean
  created_at: DateTime
  updated_at: DateTime
  created_by: UserType
  record: JSON
  meta: JSON
}

type TracingRecordTypeConnection {
  page_info: PageInfo!
  edges: [TracingRecordTypeEdge!]!
}

type TracingRecordTypeEdge {
  node: TracingRecordType!
  cursor: String!
}

input TrackerFilter {
  offset: Int
  first: Int
  created_after: DateTime
  created_before: DateTime
  carrier_name: [String!]
  status: [String!]
  test_mode: Boolean
}

enum TrackerStatusEnum {
  pending
  in_transit
  incident
  delivered
  unknown
}

type TrackerType {
  object_type: String!
  id: String
  tracking_number: String
  status: TrackerStatusEnum
  events: [TrackingEventType!]
  delivered: Boolean
  estimated_delivery: Date
  test_mode: Boolean
  options: JSON
  meta: JSON
  metadata: JSON
  shipment: ShipmentType
  messages: [MessageType!]
  created_at: DateTime
  updated_at: DateTime
  created_by: UserType
  carrier_id: [String!]!
  carrier_name: [String!]!
}

type TrackerTypeConnection {
  page_info: PageInfo!
  edges: [TrackerTypeEdge!]!
}

type TrackerTypeEdge {
  node: TrackerType!
  cursor: String!
}

type TrackingEventType {
  description: String
  location: String
  code: String
  date: String
  time: String
}

input UPSFreightSettingsInput {
  account_country_code: String
  metadata: JSON
  username: String!
  password: String!
  access_license_number: String!
  account_number: String!
  test_mode: Boolean!
  carrier_id: String!
}

type UPSFreightSettingsType implements ConnectionType {
  id: String!
  active: Boolean!
  carrier_id: String!
  carrier_name: String!
  test_mode: Boolean!
  metadata: JSON
  account_country_code: String!
  username: String!
  password: String!
  access_license_number: String!
  account_number: String!
}

input UPSSettingsInput {
  account_country_code: String
  metadata: JSON
  username: String!
  password: String!
  access_license_number: String!
  account_number: String!
  test_mode: Boolean!
  carrier_id: String!
}

type UPSSettingsType implements ConnectionType {
  id: String!
  active: Boolean!
  carrier_id: String!
  carrier_name: String!
  test_mode: Boolean!
  metadata: JSON
  account_country_code: String!
  username: String!
  password: String!
  access_license_number: String!
  account_number: String!
}

input USPSInternationalSettingsInput {
  metadata: JSON
  username: String!
  password: String!
  mailer_id: String!
  customer_registration_id: String!
  logistics_manager_mailer_id: String!
  test_mode: Boolean!
  carrier_id: String!
}

type USPSInternationalSettingsType implements ConnectionType {
  id: String!
  active: Boolean!
  carrier_id: String!
  carrier_name: String!
  test_mode: Boolean!
  metadata: JSON
  username: String!
  password: String!
  mailer_id: String!
  customer_registration_id: String!
  logistics_manager_mailer_id: String!
}

input USPSSettingsInput {
  metadata: JSON
  username: String!
  password: String!
  mailer_id: String!
  customer_registration_id: String!
  logistics_manager_mailer_id: String!
  test_mode: Boolean!
  carrier_id: String!
}

type USPSSettingsType implements ConnectionType {
  id: String!
  active: Boolean!
  carrier_id: String!
  carrier_name: String!
  test_mode: Boolean!
  metadata: JSON
  username: String!
  password: String!
  mailer_id: String!
  customer_registration_id: String!
  logistics_manager_mailer_id: String!
}

type UninstallAppMutation {
  errors: [ErrorType!]
  app: AppType
}

input UninstallAppMutationInput {
  app_id: String!
}

input UpdateAddressInput {
  country_code: CountryCodeEnum
  postal_code: String
  city: String
  federal_tax_id: String
  state_tax_id: String
  person_name: String
  company_name: String
  email: String
  phone_number: String
  state_code: String
  suburb: String
  residential: Boolean
  address_line1: String
  address_line2: String
}

input UpdateAddressTemplateInput {
  label: String
  address: UpdateAddressInput
  is_default: Boolean
  id: String!
}

type UpdateAddressTemplateMutation {
  errors: [ErrorType!]
  template: AddressTemplateType
}

input UpdateAmazonMwsSettingsInput {
  id: String!
  metadata: JSON
  seller_id: String
  developer_id: String
  mws_auth_token: String
  x_amz_access_token: String
  aws_region: String
  test_mode: Boolean
  carrier_id: String
}

type UpdateAppMutation {
  errors: [ErrorType!]
  app: AppType
}

input UpdateAppMutationInput {
  id: String!
  display_name: String
  developer_name: String
  features: [String!]!
  launch_url: String
  is_embedded: Boolean
  redirect_uris: String
  is_public: Boolean = false
  metadata: JSON
}

input UpdateAramexSettingsInput {
  id: String!
  account_country_code: String
  metadata: JSON
  username: String
  password: String
  account_pin: String
  account_entity: String
  account_number: String
  test_mode: Boolean
  carrier_id: String
}

input UpdateAustraliaPostSettingsInput {
  id: String!
  metadata: JSON
  api_key: String
  password: String
  account_number: String
  test_mode: Boolean
  carrier_id: String
}

input UpdateCanadaPostSettingsInput {
  id: String!
  metadata: JSON
  username: String
  password: String
  customer_number: String
  contract_id: String
  test_mode: Boolean
  carrier_id: String
}

input UpdateCanparSettingsInput {
  id: String!
  metadata: JSON
  username: String
  password: String
  test_mode: Boolean
  carrier_id: String
}

type UpdateCarrierConnectionMutation {
  errors: [ErrorType!]
  connection: CarrierConnectionType!
}

input UpdateCarrierConnectionMutationInput {
  amazon_mws: UpdateAmazonMwsSettingsInput
  aramex: UpdateAramexSettingsInput
  australiapost: UpdateAustraliaPostSettingsInput
  canadapost: UpdateCanadaPostSettingsInput
  canpar: UpdateCanparSettingsInput
  chronopost: UpdateChronopostSettingsInput
  dhl_express: UpdateDHLExpressSettingsInput
  dhl_poland: UpdateDHLPolandSettingsInput
  dhl_universal: UpdateDHLUniversalSettingsInput
  dicom: UpdateDicomSettingsInput
  dpdhl: UpdateDPDHLSettingsInput
  easypost: UpdateEasyPostSettingsInput
  eshipper: UpdateEShipperSettingsInput
  fedex: UpdateFedexSettingsInput
  freightcom: UpdateFreightcomSettingsInput
  generic: UpdateGenericSettingsInput
  purolator: UpdatePurolatorSettingsInput
  royalmail: UpdateRoyalMailSettingsInput
  sendle: UpdateSendleSettingsInput
  sf_express: UpdateSFExpressSettingsInput
  tnt: UpdateTNTSettingsInput
  ups: UpdateUPSSettingsInput
  ups_freight: UpdateUPSFreightSettingsInput
  usps: UpdateUSPSSettingsInput
  usps_international: UpdateUSPSInternationalSettingsInput
  yanwen: UpdateYanwenSettingsInput
  yunexpress: UpdateYunExpressSettingsInput
}

input UpdateChronopostSettingsInput {
  id: String!
  account_country_code: String
  metadata: JSON
  account_number: String
  password: String
  test_mode: Boolean
  carrier_id: String
}

input UpdateCommodityInput {
  weight: Float
  weight_unit: WeightUnitEnum
  sku: String
  quantity: Int = 1
  description: String
  value_amount: Float
  origin_country: CountryCodeEnum
  value_currency: CurrencyCodeEnum
  metadata: JSON
  parent_id: String
  id: String
}

input UpdateCustomsInput {
  commodities: [UpdateCommodityInput!]!
  certify: Boolean
  commercial_invoice: Boolean
  content_type: CustomsContentTypeEnum
  content_description: String
  incoterm: IncotermCodeEnum
  invoice: String
  invoice_date: Date
  signer: String
  duty: UpdateDutyInput
  options: JSON
  id: String
}

input UpdateCustomsTemplateInput {
  label: String
  customs: UpdateCustomsInput
  is_default: Boolean
  id: String!
}

type UpdateCustomsTemplateMutation {
  errors: [ErrorType!]
  template: CustomsTemplateType
}

input UpdateDHLExpressSettingsInput {
  id: String!
  account_country_code: String
  metadata: JSON
  site_id: String
  password: String
  account_number: String
  test_mode: Boolean
  carrier_id: String
}

input UpdateDHLPolandSettingsInput {
  id: String!
  services: [UpdateServiceLevelInput!]
  metadata: JSON
  username: String
  password: String
  account_number: String
  test_mode: Boolean
  carrier_id: String
}

input UpdateDHLUniversalSettingsInput {
  id: String!
  metadata: JSON
  consumer_key: String
  consumer_secret: String
  test_mode: Boolean
  carrier_id: String
}

input UpdateDPDHLSettingsInput {
  id: String!
  services: [UpdateServiceLevelInput!]
  metadata: JSON
  username: String
  password: String
  signature: String
  app_id: String
  account_number: String
  test_mode: Boolean
  carrier_id: String
}

type UpdateDataTemplateMutation {
  errors: [ErrorType!]
  template: DataTemplateType
}

input UpdateDataTemplateMutationInput {
  id: String!
  slug: String
  name: String
  fields_mapping: JSON
  resource_type: ResourceStatus
}

input UpdateDicomSettingsInput {
  id: String!
  metadata: JSON
  username: String
  password: String
  billing_account: String
  test_mode: Boolean
  carrier_id: String
}

type UpdateDocumentTemplateMutation {
  errors: [ErrorType!]
  template: DocumentTemplateType
}

input UpdateDocumentTemplateMutationInput {
  id: String!
  slug: String
  name: String
  template: String
  active: Boolean
  description: String
  related_object: TemplateRelatedObject
}

input UpdateDutyInput {
  paid_by: PaidByEnum
  currency: CountryCodeEnum
  account_number: String
  declared_value: Float
  bill_to: AddressInput
}

input UpdateEShipperSettingsInput {
  id: String!
  metadata: JSON
  username: String
  password: String
  test_mode: Boolean
  carrier_id: String
}

input UpdateEasyPostSettingsInput {
  id: String!
  metadata: JSON
  api_key: String
  test_mode: Boolean
  carrier_id: String
}

input UpdateFedexSettingsInput {
  id: String!
  account_country_code: String
  metadata: JSON
  password: String
  meter_number: String
  account_number: String
  user_key: String
  test_mode: Boolean
  carrier_id: String
}

input UpdateFreightcomSettingsInput {
  id: String!
  metadata: JSON
  username: String
  password: String
  test_mode: Boolean
  carrier_id: String
}

input UpdateGenericSettingsInput {
  id: String!
  account_country_code: String
  label_template: UpdateLabelTemplateInput
  services: [UpdateServiceLevelInput!]
  metadata: JSON
  display_name: String
  custom_carrier_name: String
  test_mode: Boolean
  carrier_id: String
  account_number: String
}

input UpdateLabelTemplateInput {
  id: String!
  slug: String
  template: String
  template_type: LabelTemplateTypeEnum
}

type UpdateOrganizationMutation {
  errors: [ErrorType!]
  organization: OrganizationType
}

input UpdateOrganizationMutationInput {
  id: String!
  name: String
}

input UpdateParcelInput {
  weight: Float
  weight_unit: WeightUnitEnum
  width: Float
  height: Float
  length: Float
  packaging_type: String
  package_preset: String
  description: String
  content: String
  is_document: Boolean
  dimension_unit: DimensionUnitEnum
  reference_number: String
  items: [CommodityInput!]
  id: String
}

input UpdateParcelTemplateInput {
  label: String
  parcel: UpdateParcelInput
  is_default: Boolean
  id: String!
}

type UpdateParcelTemplateMutation {
  errors: [ErrorType!]
  template: ParcelTemplateType
}

input UpdatePurolatorSettingsInput {
  id: String!
  metadata: JSON
  username: String
  password: String
  account_number: String
  user_token: String
  test_mode: Boolean
  carrier_id: String
}

input UpdateRoyalMailSettingsInput {
  id: String!
  metadata: JSON
  client_id: String
  client_secret: String
  test_mode: Boolean
  carrier_id: String
}

input UpdateSFExpressSettingsInput {
  id: String!
  metadata: JSON
  partner_id: String
  check_word: String
  test_mode: Boolean
  carrier_id: String
}

input UpdateSendleSettingsInput {
  id: String!
  metadata: JSON
  sendle_id: String
  api_key: String
  test_mode: Boolean
  carrier_id: String
}

input UpdateServiceLevelInput {
  service_name: String
  service_code: String
  cost: Float
  currency: CurrencyCodeEnum
  description: String
  active: Boolean
  estimated_transit_days: Int
  max_weight: Float
  max_width: Float
  max_height: Float
  max_length: Float
  weight_unit: WeightUnitEnum
  dimension_unit: DimensionUnitEnum
  domicile: Boolean
  international: Boolean
  id: String
}

input UpdateTNTSettingsInput {
  id: String!
  account_country_code: String
  metadata: JSON
  username: String
  password: String
  account_number: String
  test_mode: Boolean
  carrier_id: String
}

input UpdateUPSFreightSettingsInput {
  id: String!
  account_country_code: String
  metadata: JSON
  username: String
  password: String
  access_license_number: String
  account_number: String
  test_mode: Boolean
  carrier_id: String
}

input UpdateUPSSettingsInput {
  id: String!
  account_country_code: String
  metadata: JSON
  username: String
  password: String
  access_license_number: String
  account_number: String
  test_mode: Boolean
  carrier_id: String
}

input UpdateUSPSInternationalSettingsInput {
  id: String!
  metadata: JSON
  username: String
  password: String
  mailer_id: String
  customer_registration_id: String
  logistics_manager_mailer_id: String
  test_mode: Boolean
  carrier_id: String
}

input UpdateUSPSSettingsInput {
  id: String!
  metadata: JSON
  username: String
  password: String
  mailer_id: String
  customer_registration_id: String
  logistics_manager_mailer_id: String
  test_mode: Boolean
  carrier_id: String
}

input UpdateUserInput {
  full_name: String
  is_active: Boolean
}

type UpdateWebhookMutation {
  errors: [ErrorType!]
  webhook: WebhookType
}

input UpdateWebhookMutationInput {
  id: String!
  url: String
  enabled_events: [EventTypes!]!
  description: String
  disabled: Boolean
  test_mode: Boolean
}

input UpdateYanwenSettingsInput {
  id: String!
  metadata: JSON
  customer_number: String
  license_key: String
  test_mode: Boolean
  carrier_id: String
}

input UpdateYunExpressSettingsInput {
  id: String!
  metadata: JSON
  customer_number: String
  api_secret: String
  test_mode: Boolean
  carrier_id: String
}

enum UserRole {
  member
  developer
  admin
}

type UserType {
  email: String!
  full_name: String!
  is_staff: Boolean!
  date_joined: DateTime!
  last_login: DateTime
}

type UserUpdateMutation {
  errors: [ErrorType!]
  user: UserType
}

input WebhookFilter {
  offset: Int
  first: Int
  url: String
  disabled: Boolean
  test_mode: Boolean
  events: [EventTypes!]!
  date_after: DateTime
  date_before: DateTime
}

type WebhookType {
  object_type: String!
  id: String!
  url: String
  secret: String
  disabled: Boolean
  test_mode: Boolean
  description: String
  enabled_events: [EventTypes!]!
  last_event_at: DateTime
  created_at: DateTime
  updated_at: DateTime
  created_by: UserType
}

type WebhookTypeConnection {
  page_info: PageInfo!
  edges: [WebhookTypeEdge!]!
}

type WebhookTypeEdge {
  node: WebhookType!
  cursor: String!
}

enum WeightUnitEnum {
  KG
  LB
}

input YanwenSettingsInput {
  metadata: JSON
  customer_number: String!
  license_key: String!
  test_mode: Boolean!
  carrier_id: String!
}

type YanwenSettingsType implements ConnectionType {
  id: String!
  active: Boolean!
  carrier_id: String!
  carrier_name: String!
  test_mode: Boolean!
  metadata: JSON
  customer_number: String!
  license_key: String!
}

input YunExpressSettingsInput {
  metadata: JSON
  customer_number: String!
  api_secret: String!
  test_mode: Boolean!
  carrier_id: String!
}

type YunExpressSettingsType implements ConnectionType {
  id: String!
  active: Boolean!
  carrier_id: String!
  carrier_name: String!
  test_mode: Boolean!
  metadata: JSON
  customer_number: String!
  api_secret: String!
}
